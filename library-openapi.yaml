openapi: 3.0.3
info:
  title: L3 Miage PhotoNum
  description: |
    Cette api permet la gestion de la base de donnée d'une société de tirage de photo numérique.
    Elle permet de gérer les clients, les adresses, les commandes, les articles, les impressions, les tirages, les cadres, les calendriers, les albums, les pages, les images et les photos.
    * Créer des clients
    * Supprimer des clients
    * Modifier des clients
    * Lister des clients
    * Créer des adresses
    * Créer des adresses pour un client
    * 
    
    * Rechercher 
      * Clients par id
  version: 1.0.0
servers:
  - url: "http://localhost:8080"
paths:
  /api/Client:
    get:
      summary: Trouver tous les clients
      #operationId: find-authors
      parameters:
        - name: q
          in: query
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Client"
    post:
      summary: Creer un nouveau client
      operationId: nouveau-client
      requestBody:
        content:
          'application/json':
            schema:
              $ref: "#/components/schemas/Client"
      responses:
        201:
          description: Créé
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Client"
        400:
          description: Dans le cas où le client ne peut être validé
  /api/CLient/{id}:
    parameters:
      - name: id
        description: id du client
        in: path
        required: true
        schema:
          type: number
          format: int64
    get:
      summary: Trouver un client
      operationId: trouver-client
      responses:
        200:
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Client"

        404:
          description: Le client n'a pas été trouvé
    put:
      summary: Mettre à jour les données d'un client
      description: La mise à jour sera faite si le client est trouvé
      operationId: put-client
      requestBody:
        content:
          'application/json':
            schema:
              $ref: "#/components/schemas/Client"
      responses:
        200:
          description: Mis à jour
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Client"
        400:
          description: Dans le cas où le client ne peut être validé
        404:
          description: Le client n'a pas été trouvé
    delete:
      summary: Supprimer un client (et toutes ses adresses)
      operationId: delete-client
      responses:
        204:
          description: Supprimé
        404:
          description: Le client n'a pas été trouvé
          
  /api/Client/{id}/AdressePostale:
    parameters:
      - name: id
        description: id du client
        in: path
        required: true
        schema:
         type: number
         format: int64
    get:
      summary: Trouver toutes les adresses postales d'un client donné
      operationId: find-clients-adress
      parameters:
        - name: q
          in: query
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AdressePostale"
        404:
          description: Le client n'a pas été trouvé
    post:
      summary: Creer une nouvelle adresse pour un client donné
      operationId: new-clients-adress
      requestBody:
        content:
          'application/json':
            schema:
              $ref: "#/components/schemas/NewAdressePostale"
      responses:
        201:
          description: Créée
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/AdressePostale"
        404:
          description: Le client n'a pas été trouvé

  /api/Client/{id}/Commande:
    parameters:
      - name: id
        description: id du client
        in: path
        required: true
        schema:
         type: number
         format: int64
    get:
      summary: Trouver toutes les commandes d'un client donné
      operationId: find-clients-ordres
      parameters:
        - name: q
          in: query
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Commande"
        404:
          description: Le client n'a pas été trouvé
    post:
      summary: Creer une nouvelle commande pour un client donné
      operationId: new-client-order
      requestBody:
        content:
          'application/json':
            schema:
              $ref: "#/components/schemas/NewCommande"
      responses:
        201:
          description: Créée
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Commande"
        404:
          description: Le client n'a pas été trouvé



  /api/AdressePostale:
    get:
      summary: Trouver toutes les adresses postales
      operationId: get-adress
      responses:
        200:
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/AdressePostale"

  /api/AdressePostale/{id}:
    parameters:
      - name: id
        description: id de l'adresse postale
        in: path
        required: true
        schema:
          type: number
          format: int64
    get:
      summary: Trouver une adresse
      operationId: get-adress
      responses:
        200:
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AdressePostale"
        404:
          description: L'adresse n'a pas été toruvée
    put:
      summary: Mettre à jour une adresse
      operationId: update-adress
      requestBody:
        content:
          'application/json':
            schema:
              $ref: "#/components/schemas/AdressePostale"
      responses:
        404:
          description: L'adresse n'a pas été trouvée
    delete:
      summary: Supprimer une adresse
      operationId: delete-adress
      responses:
        204:
          description: Supprimés
        404:
          description: L'adresse postale n'a pas été trouvée


#Commande

  /api/Commande:
    get:
      summary: Trouver toutes les commandes
      operationId: get-orders
      responses:
        200:
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Commande"
  /api/Commande/{id}:
    parameters:
      - name: id
        description: id de commande
        in: path
        required: true
        schema:
          type: number
          format: int64
    get:
      summary: Trouver une commande
      operationId: get-order
      responses:
        200:
          description: OK
          content:
            'application/json':
              schema:
                  $ref: "#/components/schemas/Commande"
        404:
          description: La commande n'a pas été trouvée
    put:
      summary: Mettre à jour une commande
      operationId: update-order
      requestBody:
        content:
          'application/json':
            schema:
              $ref: "#/components/schemas/Commande"
      responses:
        404:
          description: La commande n'a pas été trouvée
    delete:
      summary: Supprimer une commande
      operationId: delete-order
      responses:
        204:
          description: Suppriméee
        404:
          description: La commande n'a pas été trouvée

components:
  schemas:
    BaseClient:
      description: Un client, sans id (pour la creation)
      type: object
      properties:
        nom:
          type: string
        prenoms :
          type : array
          #items : 
        email:
          type : string
        motDePasse:
          type : string
      required:
        - name
        - email
        - motDePasse
      example:
        name: Turc
        prenoms : Julien
        email : julien.turc@etu.univ-grenoble-alpes.fr
        motDepasse : 1234
    Client:
      description: Un client, pour tout usage sauf la création
      allOf:
        - $ref: "#/components/schemas/BaseClient"
        - type: object
          properties:
            id:
              type: integer
              format: int64
            name :
              type: string
            email : 
              type : string
            motDePasse :
              type : string
          required:
            - id
          example:
            id: 1
            name: Turc
    NewAdressePostale:
      description: Une adresse postale sans id (pour la creation)
      type: object
      properties:
        adresse:
          type: string
        codePostal:
          description: code postal
          type: integer
          format: int64
          minimum: 00001 # 5 digits
          maximum: 99999 # 5 digits
        ville:
          type: string
        pays:
          type: string
      required:
        - adresse
        - codePostal
        - ville
      example:
        adresse: 60 rue de la chimie
        codePostal: 38140
        ville: Saint-Martin d'Hères
        pays: France
    AdressePostale:
      description: Une adresse postale sans id (pour la mise à jour) et clients (juste la reponse)
      allOf:
        - $ref: "#/components/schemas/NewAdressePostale"
        - type: object
          properties:
            id:
              type: integer
              format: int64
            clients:
              type: array
              items:
                $ref: "#/components/schemas/Client"
              readOnly: true
          required:
            - id
      example:
        id: 1
        adresse : 60 rue de la chimie
        codePostal: 38140
        ville: Saint-Martin d'Hères
        pays: France
        authors:
          - id: 1
            name: Turc
          - id: 2
            name : Jandot
          - id: 3 
            name : Kone


    NewCommande:
      description: Une commande sans id (pour la création)
      type: object
      properties:
        dateCommande:
          type: string
        prixTotal:
          description: prix total de la commande
          type: integer
          format: int64
        adressePostale:
          type: string
      required:
        - dateCommande
        - adressePostale
      example:
        dateCommande: 01/04/2023
        adressePostale: 60 Rue de la chimie

    Commande:
      description: Une commande sans id (pour la mise à jour) et son client (pour la réponse)
      allOf:
        - $ref: "#/components/schemas/NewCommande"
        - type: object
          properties:
            id:
              type: integer
              format: int64
            client:
              type: string
              items:
                $ref: "#/components/schemas/Commande"
              readOnly: true
          required:
            - id
      example:
        id: 1
        daeCommande: 12/02/2022
        adressePostale: 2 Rue du Cotentin

        client:
          - id: 1
            name: Wyss


